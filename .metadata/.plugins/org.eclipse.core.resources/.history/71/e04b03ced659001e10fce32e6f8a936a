package com.hms.authms.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;

import com.hms.authms.dto.LoginRequest;
import com.hms.authms.dto.UserDetailsResponse;
import com.hms.authms.dto.AddUserRequest;
import com.hms.authms.service.IAuthenticationService;

@RestController
@RequestMapping("/api/auth")
public class AuthController {

	@Autowired
	private IAuthenticationService authenticationService;

	@Autowired
	private AuthenticationManager authenticationManager;

	@PostMapping("/signup")
	public UserDetailsResponse addNewUser(@RequestBody AddUserRequest registerRequest) {
		return authenticationService.saveUser(registerRequest);
	}

	@PostMapping("/login")
	public String getToken(@RequestBody LoginRequest loginRequest) {
		UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken(loginRequest.getEmail(),
				loginRequest.getPassword());
		Authentication authentication = authenticationManager.authenticate(token);
		
		if (authentication.isAuthenticated()) {
			SecurityContextHolder.getContext().setAuthentication(authentication);
			String jwtToken = authenticationService.generateToken(authRequest.getUsername());

			
			
			return jwtToken;
		} else {
			throw new RuntimeException("invalid access");
		}
	}

	@GetMapping("/validate")
	public String validateToken(@RequestParam("token") String token) {
		authenticationService.validateToken(token);
		return "Token is valid";
	}
}