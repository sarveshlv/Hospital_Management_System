package com.hms.userms.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.hms.userms.dto.UpdateUserRequest;
import com.hms.userms.entity.User;
import com.hms.userms.exception.UserNotFoundException;

@Service
public class UserService implements IUserService {

	@Autowired
	private com.hms.userms.repository.UserRepository userRepository;

	@Autowired
	private PasswordEncoder passwordEncoder;

	@Override
	public User updateUser(UpdateUserRequest updateUserRequest) throws UserNotFoundException {
		User user = getUserByEmail(updateUserRequest.getEmail());

		user.setFirstName(updateUserRequest.getFirstName());
		user.setLastName(updateUserRequest.getLastName());
		user.setPassword(passwordEncoder.encode(updateUserRequest.getPassword()));

		userRepository.save(user);

		return ser;
	}

	@Override
	public User getUserDetailsByEmail(String email) throws UsernameNotFoundException {
		User user = getUserByEmail(email);
		return ServiceUtility.getUserDetailsResponse(user);

	}

	private User getUserByEmail(String email) throws UsernameNotFoundException {
		return userRepository.findByEmail(email)
				.orElseThrow(() -> new UsernameNotFoundException("User not found with email :" + email));
	}

	@Override
	public UserDetailsResponse addReferenceId(String email, String referenceId) throws UsernameNotFoundException {
		User user = getUserByEmail(email);
		user.setReferenceId(referenceId);

		userRepository.save(user);
		return ServiceUtility.getUserDetailsResponse(user);
	}
}
