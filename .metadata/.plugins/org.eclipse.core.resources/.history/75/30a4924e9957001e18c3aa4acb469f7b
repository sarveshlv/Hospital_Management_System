package com.hms.patientms.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.RestTemplate;


public class UserApiService {
	@Autowired
    private RestTemplate restTemplate;

    /**
     * Constructor for initializing the HospitalApiService with a RestTemplate instance.
     *
     * @param restTemplate The RestTemplate used for making HTTP requests to the Hospital API.
     */
    public UserApiService(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    public boolean addRefrence(String patientId) throws HospitalNotFoundException {
        String checkHospitalUrl = "http://localhost:8080/api/hospitals/find/" + hospitalId;
        try {
            restTemplate.getForObject(checkHospitalUrl, Hospital.class);
            return true;
        } catch (HttpClientErrorException.NotFound e) {
            throw new RuntimeException("Service not found : " + e.getMessage());
        } catch (Exception e) {
            throw new RuntimeException("Error while checking if hospital exists: " + e.getMessage());
        }
    }

    /**
     * Retrieves a list of nearby hospitals based on the provided pincode by making an API request to the Hospital API.
     *
     * @param pincode The pincode used to find nearby hospitals.
     * @return A list of nearby hospitals.
     */
    public List<Hospital> getNearbyHospitals(Long pincode) {
        String nearbyHospitalsUrl = "http://localhost:8080/api/hospitals/nearby/" + pincode;

        ResponseEntity<List<Hospital>> responseEntity = restTemplate.exchange(
                nearbyHospitalsUrl,
                HttpMethod.GET,
                null,
                new ParameterizedTypeReference<List<Hospital>>() {}
        );
        return responseEntity.getBody();
    }
}
