package com.hms.hospitalms.entities;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.Field;

import jakarta.validation.constraints.Digits;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/**
 * Represents a hospital entity. This class is annotated with Lombok annotations
 * for generating getters, setters, toString, and equals/hashCode methods. It is
 * also annotated with Spring Data MongoDB annotations for mapping to a MongoDB
 * collection. Author: @prateek
 */
@Getter
@Setter
@ToString
@EqualsAndHashCode
@Document(collection = "hospitals")
public class Hospital {
	@Id
	private String id;
	private String name;
	private Boolean verified;
	@Field
	private HospitalType hospitalType;
	private Long contactNo;
	private Address address;

	/**
	 * Represents the address of a hospital. This class is annotated with Lombok
	 * annotations for generating getters, setters, toString, and equals/hashCode
	 * methods. It includes validation annotations for city, state, and pincode.
	 */
	@Getter
	@Setter
	@NoArgsConstructor
	@AllArgsConstructor
	@ToString
	@EqualsAndHashCode
	public static class Address {
		@NotBlank(message = "City is required")
		private String city;
		@NotBlank(message = "State is required")
		private String state;
		@NotNull(message = "Pincode is required")
		  @Min(value = 100000L, message = "Invalid phone number")
	    @Max(value = 999999L, message = "Invalid phone number")
		@Digits(integer = 6, fraction = 0, message = "Pincode must be a 6-digit number")
		private Long pincode;
	}

	/**
	 * Enum representing the type of hospital (e.g., Government, Private,
	 * Semi-private).
	 */
	public enum HospitalType {
		GOVT, PRIVATE, SEMI_PRIVATE
	}
}
