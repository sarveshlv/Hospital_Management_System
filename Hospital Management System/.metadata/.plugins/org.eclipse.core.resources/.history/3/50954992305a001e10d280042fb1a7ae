package com.hms.billingms.controller;

import com.hms.billingms.dto.BillingRequest;
import com.hms.billingms.entities.Billing;
import com.hms.billingms.exceptions.BillingNotFoundException;
import com.hms.billingms.service.IBillingService;
import com.hms.billingms.service.PaypalService;
import com.paypal.api.payments.Links;
import com.paypal.api.payments.Payment;
import com.paypal.base.rest.PayPalRESTException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/billings")
public class BillingController {

	@Autowired
	private IBillingService billingService;

	@Autowired
	private PaypalService paypalService;

	public static final String SUCCESS_URL = "pay/success";
	public static final String CANCEL_URL = "pay/cancel";

	@PostMapping("/add/{bookingId}")
	public Billing addBilling(@RequestHeader("Authorization") String authorizationHeader, 
			@RequestBody BillingRequest billingRequest)
			throws BillingNotFoundException {
		return billingService.addBilling(authorizationHeader, billingRequest.getBookingId());
	}

	@GetMapping("/findById/{billingId}")
	public Billing getBillingById(@PathVariable String billingId) throws BillingNotFoundException {
		return billingService.findById(billingId);
	}

	@PostMapping("/pay/{billingId}")
	public String payment(@PathVariable String billingId) throws PayPalRESTException {
		Billing billing = billingService.findById(billingId);
		Payment payment = paypalService.createPayment(billing.getBillAmount(), "INR", "paypal", "sale", "Booking Charges",
				"http://localhost:8500/api/billings/pay/success" + SUCCESS_URL, "http://localhost:8500/api/billings/pay/cancel" + CANCEL_URL);

		for (Links link : payment.getLinks()) {
			if (link.getRel().equals("approval_url")) {
				return "redirect:" + link.getHref();
			}
		}
		return "redirect:/";
	}

	@GetMapping(value = CANCEL_URL)
	public String cancelPay() {
		return "cancel";
	}

	@GetMapping(value = SUCCESS_URL)
	public String successPay(@RequestParam("paymentId") String paymentId, @RequestParam("PayerID") String payerId) {
		try {
			Payment payment = paypalService.executePayment(paymentId, payerId);
			System.out.println(payment.toJSON());
			if (payment.getState().equals("approved")) {
				return "success";
			}
		} catch (PayPalRESTException e) {
			System.out.println(e.getMessage());
		}
		return "failed";
	}
}
